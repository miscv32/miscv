#! /usr/local/bin/vvp
:ivl_version "13.0 (devel)" "(s20250103-5-g4471961ed)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "/usr/local/lib/ivl/system.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/lib/ivl/va_math.vpi";
:vpi_module "/usr/local/lib/ivl/v2009.vpi";
S_0x5d64b7f84420 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
P_0x5d64b7f845b0 .param/l "ADDR_WIDTH" 0 3 3, +C4<00000000000000000000000000001100>;
P_0x5d64b7f845f0 .param/l "DATA_WIDTH_BYTES" 0 3 2, +C4<00000000000000000000000000000100>;
P_0x5d64b7f84630 .param/l "MEM_SIZE_BYTES" 0 3 1, +C4<00000000000000000001000000000000>;
S_0x5d64b7f447a0 .scope module, "driver" "driver" 3 5;
 .timescale 0 0;
v0x5d64b7fa78b0_3 .array/port v0x5d64b7fa78b0, 3;
L_0x5d64b7fa7a80 .functor BUFZ 1, v0x5d64b7fa78b0_3, C4<0>, C4<0>, C4<0>;
v0x5d64b7fa78b0_2 .array/port v0x5d64b7fa78b0, 2;
L_0x5d64b7fa7b40 .functor BUFZ 1, v0x5d64b7fa78b0_2, C4<0>, C4<0>, C4<0>;
v0x5d64b7fa78b0_1 .array/port v0x5d64b7fa78b0, 1;
L_0x5d64b7fa7c10 .functor BUFZ 1, v0x5d64b7fa78b0_1, C4<0>, C4<0>, C4<0>;
v0x5d64b7fa78b0_0 .array/port v0x5d64b7fa78b0, 0;
L_0x5d64b7fa7ce0 .functor BUFZ 1, v0x5d64b7fa78b0_0, C4<0>, C4<0>, C4<0>;
v0x5d64b7fa74b0_3 .array/port v0x5d64b7fa74b0, 3;
L_0x5d64b7fa7de0 .functor BUFZ 8, v0x5d64b7fa74b0_3, C4<00000000>, C4<00000000>, C4<00000000>;
v0x5d64b7fa74b0_2 .array/port v0x5d64b7fa74b0, 2;
L_0x5d64b7fa7eb0 .functor BUFZ 8, v0x5d64b7fa74b0_2, C4<00000000>, C4<00000000>, C4<00000000>;
v0x5d64b7fa74b0_1 .array/port v0x5d64b7fa74b0, 1;
L_0x5d64b7fa7fc0 .functor BUFZ 8, v0x5d64b7fa74b0_1, C4<00000000>, C4<00000000>, C4<00000000>;
v0x5d64b7fa74b0_0 .array/port v0x5d64b7fa74b0, 0;
L_0x5d64b7fa8060 .functor BUFZ 8, v0x5d64b7fa74b0_0, C4<00000000>, C4<00000000>, C4<00000000>;
v0x5d64b7fa6b00_3 .array/port v0x5d64b7fa6b00, 3;
L_0x5d64b7fa8180 .functor BUFZ 8, v0x5d64b7fa6b00_3, C4<00000000>, C4<00000000>, C4<00000000>;
v0x5d64b7fa6b00_2 .array/port v0x5d64b7fa6b00, 2;
L_0x5d64b7fa8250 .functor BUFZ 8, v0x5d64b7fa6b00_2, C4<00000000>, C4<00000000>, C4<00000000>;
v0x5d64b7fa6b00_1 .array/port v0x5d64b7fa6b00, 1;
L_0x5d64b7fa8380 .functor BUFZ 8, v0x5d64b7fa6b00_1, C4<00000000>, C4<00000000>, C4<00000000>;
v0x5d64b7fa6b00_0 .array/port v0x5d64b7fa6b00, 0;
L_0x5d64b7fa8450 .functor BUFZ 8, v0x5d64b7fa6b00_0, C4<00000000>, C4<00000000>, C4<00000000>;
v0x5d64b7fa7190_0 .var "addr", 11 0;
v0x5d64b7fa72a0_0 .var "clk", 0 0;
v0x5d64b7fa7370 .array "data_r", 0 3;
v0x5d64b7fa7370_0 .net v0x5d64b7fa7370 0, 7 0, L_0x5d64b7fa8450; 1 drivers
v0x5d64b7fa7370_1 .net v0x5d64b7fa7370 1, 7 0, L_0x5d64b7fa8380; 1 drivers
v0x5d64b7fa7370_2 .net v0x5d64b7fa7370 2, 7 0, L_0x5d64b7fa8250; 1 drivers
v0x5d64b7fa7370_3 .net v0x5d64b7fa7370 3, 7 0, L_0x5d64b7fa8180; 1 drivers
v0x5d64b7fa74b0 .array "data_w", 0 3, 7 0;
v0x5d64b7fa7620 .array "dump", 0 4095, 7 0;
v0x5d64b7fa7730_0 .var/2s "i", 31 0;
v0x5d64b7fa7810_0 .var "rst_bar", 0 0;
v0x5d64b7fa78b0 .array "w_bar", 0 3, 0 0;
E_0x5d64b7f7edc0 .event negedge, v0x5d64b7fa6a30_0;
S_0x5d64b7f44930 .scope begin, "Clock_Tick" "Clock_Tick" 3 36, 3 36 0, S_0x5d64b7f447a0;
 .timescale 0 0;
S_0x5d64b7f75870 .scope begin, "Display_Memory" "Display_Memory" 3 40, 3 40 0, S_0x5d64b7f447a0;
 .timescale 0 0;
S_0x5d64b7f75a50 .scope begin, "Initialise_Processor" "Initialise_Processor" 3 13, 3 13 0, S_0x5d64b7f447a0;
 .timescale 0 0;
S_0x5d64b7f75c60 .scope begin, "Write_FSM" "Write_FSM" 3 23, 3 23 0, S_0x5d64b7f447a0;
 .timescale 0 0;
S_0x5d64b7f75e40 .scope module, "mem_uut" "mem" 3 49, 4 1 0, S_0x5d64b7f447a0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "rst_bar";
    .port_info 2 /INPUT 4 "w_bar";
    .port_info 3 /INPUT 32 "data_w";
    .port_info 4 /INPUT 12 "addr";
    .port_info 5 /OUTPUT 32 "data_r";
L_0x5d64b7f74ee0 .functor BUFZ 12, v0x5d64b7fa7190_0, C4<000000000000>, C4<000000000000>, C4<000000000000>;
v0x5d64b7fa6850_0 .net "addr", 11 0, v0x5d64b7fa7190_0;  1 drivers
v0x5d64b7fa6950_0 .net "base_addr", 11 0, L_0x5d64b7f74ee0;  1 drivers
v0x5d64b7fa6a30_0 .net "clk", 0 0, v0x5d64b7fa72a0_0;  1 drivers
v0x5d64b7fa6b00 .array "data_r", 0 3, 7 0;
v0x5d64b7fa6c70 .array "data_w", 0 3;
v0x5d64b7fa6c70_0 .net v0x5d64b7fa6c70 0, 7 0, L_0x5d64b7fa8060; 1 drivers
v0x5d64b7fa6c70_1 .net v0x5d64b7fa6c70 1, 7 0, L_0x5d64b7fa7fc0; 1 drivers
v0x5d64b7fa6c70_2 .net v0x5d64b7fa6c70 2, 7 0, L_0x5d64b7fa7eb0; 1 drivers
v0x5d64b7fa6c70_3 .net v0x5d64b7fa6c70 3, 7 0, L_0x5d64b7fa7de0; 1 drivers
v0x5d64b7fa6e00 .array "mem", 0 4095, 7 0;
v0x5d64b7fa6ec0_0 .net "rst_bar", 0 0, v0x5d64b7fa7810_0;  1 drivers
v0x5d64b7fa6f80 .array "w_bar", 0 3;
v0x5d64b7fa6f80_0 .net v0x5d64b7fa6f80 0, 0 0, L_0x5d64b7fa7ce0; 1 drivers
v0x5d64b7fa6f80_1 .net v0x5d64b7fa6f80 1, 0 0, L_0x5d64b7fa7c10; 1 drivers
v0x5d64b7fa6f80_2 .net v0x5d64b7fa6f80 2, 0 0, L_0x5d64b7fa7b40; 1 drivers
v0x5d64b7fa6f80_3 .net v0x5d64b7fa6f80 3, 0 0, L_0x5d64b7fa7a80; 1 drivers
E_0x5d64b7f7e550 .event posedge, v0x5d64b7fa6a30_0;
E_0x5d64b7f685e0/0 .event negedge, v0x5d64b7fa6ec0_0;
E_0x5d64b7f685e0/1 .event posedge, v0x5d64b7fa6a30_0;
E_0x5d64b7f685e0 .event/or E_0x5d64b7f685e0/0, E_0x5d64b7f685e0/1;
S_0x5d64b7f76180 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 4 18, 4 18 0, S_0x5d64b7f75e40;
 .timescale 0 0;
v0x5d64b7f74ff0_0 .var/2s "i", 31 0;
S_0x5d64b7fa62b0 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 4 22, 4 22 0, S_0x5d64b7f75e40;
 .timescale 0 0;
v0x5d64b7fa64b0_0 .var/2s "i", 31 0;
S_0x5d64b7fa6590 .scope begin, "$ivl_for_loop2" "$ivl_for_loop2" 4 31, 4 31 0, S_0x5d64b7f75e40;
 .timescale 0 0;
v0x5d64b7fa6770_0 .var/2s "i", 31 0;
    .scope S_0x5d64b7f75e40;
T_0 ;
    %wait E_0x5d64b7f685e0;
    %load/vec4 v0x5d64b7fa6ec0_0;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.0, 8;
    %fork t_1, S_0x5d64b7f76180;
    %jmp t_0;
    .scope S_0x5d64b7f76180;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5d64b7f74ff0_0, 0, 32;
T_0.2 ; Top of for-loop
    %load/vec4 v0x5d64b7f74ff0_0;
    %cmpi/s 4096, 0, 32;
	  %jmp/0xz T_0.3, 5;
    %pushi/vec4 0, 0, 8;
    %ix/getv/s 3, v0x5d64b7f74ff0_0;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v0x5d64b7fa6e00, 0, 4;
T_0.4 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5d64b7f74ff0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x5d64b7f74ff0_0, 0, 32;
    %jmp T_0.2;
T_0.3 ; for-loop exit label
    %end;
    .scope S_0x5d64b7f75e40;
t_0 %join;
    %jmp T_0.1;
T_0.0 ;
    %fork t_3, S_0x5d64b7fa62b0;
    %jmp t_2;
    .scope S_0x5d64b7fa62b0;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5d64b7fa64b0_0, 0, 32;
T_0.5 ; Top of for-loop
    %load/vec4 v0x5d64b7fa64b0_0;
    %cmpi/s 4, 0, 32;
	  %jmp/0xz T_0.6, 5;
    %load/vec4 v0x5d64b7fa64b0_0;
    %parti/s 2, 0, 2;
    %pad/u 4;
    %ix/vec4 4;
    %load/vec4a v0x5d64b7fa6f80, 4;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.8, 8;
    %load/vec4 v0x5d64b7fa64b0_0;
    %parti/s 2, 0, 2;
    %pad/u 4;
    %ix/vec4 4;
    %load/vec4a v0x5d64b7fa6c70, 4;
    %load/vec4 v0x5d64b7fa6950_0;
    %load/vec4 v0x5d64b7fa64b0_0;
    %parti/s 12, 0, 2;
    %add;
    %pad/u 14;
    %ix/vec4 3;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v0x5d64b7fa6e00, 0, 4;
T_0.8 ;
T_0.7 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5d64b7fa64b0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x5d64b7fa64b0_0, 0, 32;
    %jmp T_0.5;
T_0.6 ; for-loop exit label
    %end;
    .scope S_0x5d64b7f75e40;
t_2 %join;
T_0.1 ;
    %jmp T_0;
    .thread T_0;
    .scope S_0x5d64b7f75e40;
T_1 ;
    %wait E_0x5d64b7f7e550;
    %fork t_5, S_0x5d64b7fa6590;
    %jmp t_4;
    .scope S_0x5d64b7fa6590;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5d64b7fa6770_0, 0, 32;
T_1.0 ; Top of for-loop
    %load/vec4 v0x5d64b7fa6770_0;
    %cmpi/s 4, 0, 32;
	  %jmp/0xz T_1.1, 5;
    %ix/getv/s 4, v0x5d64b7fa6770_0;
    %load/vec4a v0x5d64b7fa6f80, 4;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.3, 8;
    %ix/getv/s 4, v0x5d64b7fa6770_0;
    %load/vec4a v0x5d64b7fa6c70, 4;
    %ix/getv/s 3, v0x5d64b7fa6770_0;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v0x5d64b7fa6b00, 0, 4;
    %jmp T_1.4;
T_1.3 ;
    %load/vec4 v0x5d64b7fa6950_0;
    %load/vec4 v0x5d64b7fa6770_0;
    %parti/s 12, 0, 2;
    %add;
    %pad/u 14;
    %ix/vec4 4;
    %load/vec4a v0x5d64b7fa6e00, 4;
    %ix/getv/s 3, v0x5d64b7fa6770_0;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v0x5d64b7fa6b00, 0, 4;
T_1.4 ;
T_1.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5d64b7fa6770_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x5d64b7fa6770_0, 0, 32;
    %jmp T_1.0;
T_1.1 ; for-loop exit label
    %end;
    .scope S_0x5d64b7f75e40;
t_4 %join;
    %jmp T_1;
    .thread T_1;
    .scope S_0x5d64b7f447a0;
T_2 ;
    %fork t_7, S_0x5d64b7f75a50;
    %jmp t_6;
    .scope S_0x5d64b7f75a50;
t_7 ;
    %vpi_call/w 3 14 "$readmemh", "file.hex", v0x5d64b7fa7620, 32'sb00000000000000000000000000000000, 32'sb00000000000000000000000000001001 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x5d64b7fa72a0_0, 0, 1;
    %pushi/vec4 0, 0, 12;
    %store/vec4 v0x5d64b7fa7190_0, 0, 12;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5d64b7fa7730_0, 0, 32;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x5d64b7fa7810_0, 0, 1;
    %end;
    .scope S_0x5d64b7f447a0;
t_6 %join;
    %end;
    .thread T_2;
    .scope S_0x5d64b7f447a0;
T_3 ;
    %wait E_0x5d64b7f7edc0;
    %fork t_9, S_0x5d64b7f75c60;
    %jmp t_8;
    .scope S_0x5d64b7f75c60;
t_9 ;
    %load/vec4 v0x5d64b7fa7730_0;
    %addi 3, 0, 32;
    %cmpi/s 4096, 0, 32;
    %jmp/0xz  T_3.0, 5;
    %load/vec4 v0x5d64b7fa7730_0;
    %parti/s 12, 0, 2;
    %assign/vec4 v0x5d64b7fa7190_0, 0;
    %load/vec4 v0x5d64b7fa7730_0;
    %addi 4, 0, 32;
    %assign/vec4 v0x5d64b7fa7730_0, 0;
T_3.0 ;
    %load/vec4 v0x5d64b7fa7730_0;
    %cmpi/e 8, 0, 32;
    %jmp/0xz  T_3.2, 4;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x5d64b7fa7810_0, 0;
T_3.2 ;
    %end;
    .scope S_0x5d64b7f447a0;
t_8 %join;
    %jmp T_3;
    .thread T_3;
    .scope S_0x5d64b7f447a0;
T_4 ;
    %delay 5, 0;
    %fork t_11, S_0x5d64b7f44930;
    %jmp t_10;
    .scope S_0x5d64b7f44930;
t_11 ;
    %load/vec4 v0x5d64b7fa72a0_0;
    %inv;
    %assign/vec4 v0x5d64b7fa72a0_0, 0;
    %end;
    .scope S_0x5d64b7f447a0;
t_10 %join;
    %jmp T_4;
    .thread T_4;
    .scope S_0x5d64b7f447a0;
T_5 ;
    %wait E_0x5d64b7f7e550;
    %fork t_13, S_0x5d64b7f75870;
    %jmp t_12;
    .scope S_0x5d64b7f75870;
t_13 ;
    %vpi_call/w 3 42 "$display", "i: %h", v0x5d64b7fa7730_0 {0 0 0};
    %vpi_call/w 3 43 "$display", "%h %h %h %h", v0x5d64b7fa7370_0, v0x5d64b7fa7370_1, v0x5d64b7fa7370_2, v0x5d64b7fa7370_3 {0 0 0};
    %end;
    .scope S_0x5d64b7f447a0;
t_12 %join;
    %jmp T_5;
    .thread T_5;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "driver.sv";
    "mem.sv";
